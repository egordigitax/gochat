# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbchat

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class GetMessageFromClientRequest(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = GetMessageFromClientRequest()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsGetMessageFromClientRequest(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # GetMessageFromClientRequest
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # GetMessageFromClientRequest
    def Text(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def GetMessageFromClientRequestStart(builder):
    builder.StartObject(1)

def Start(builder):
    GetMessageFromClientRequestStart(builder)

def GetMessageFromClientRequestAddText(builder, text):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(text), 0)

def AddText(builder, text):
    GetMessageFromClientRequestAddText(builder, text)

def GetMessageFromClientRequestEnd(builder):
    return builder.EndObject()

def End(builder):
    return GetMessageFromClientRequestEnd(builder)


class GetMessageFromClientRequestT(object):

    # GetMessageFromClientRequestT
    def __init__(self):
        self.text = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        getMessageFromClientRequest = GetMessageFromClientRequest()
        getMessageFromClientRequest.Init(buf, pos)
        return cls.InitFromObj(getMessageFromClientRequest)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, getMessageFromClientRequest):
        x = GetMessageFromClientRequestT()
        x._UnPack(getMessageFromClientRequest)
        return x

    # GetMessageFromClientRequestT
    def _UnPack(self, getMessageFromClientRequest):
        if getMessageFromClientRequest is None:
            return
        self.text = getMessageFromClientRequest.Text()

    # GetMessageFromClientRequestT
    def Pack(self, builder):
        if self.text is not None:
            text = builder.CreateString(self.text)
        GetMessageFromClientRequestStart(builder)
        if self.text is not None:
            GetMessageFromClientRequestAddText(builder, text)
        getMessageFromClientRequest = GetMessageFromClientRequestEnd(builder)
        return getMessageFromClientRequest
